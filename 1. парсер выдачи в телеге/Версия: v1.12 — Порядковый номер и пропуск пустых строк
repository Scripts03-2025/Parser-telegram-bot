# === telegram_search_save_results.py ===
# –í–µ—Ä—Å–∏—è: v1.12 ‚Äî –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∏ –ø—Ä–æ–ø—É—Å–∫ –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫
# ChatGPT Thread: https://chatgpt.com/c/67f64a92-75d8-8010-a0d2-e1fe983c322f

from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from datetime import datetime
import pandas as pd
import time
import os
import re
import pyautogui

# üìÅ –ü—É—Ç–∏
profile_path = os.path.abspath("ChromeUserProfile")
output_path = r"C:\Users\CL\Documents\–û–±—â–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ —Å –≥—É–≥–ª –¥–æ–∫–æ–º (Google Drive)\–¢–µ–ª–µ–≥—Ä–∞–º –ø–∞—Ä—Å–µ—Ä –≤—ã–¥–∞—á–∏ –ø–æ —Ä–∞–∑–¥–µ–≤–∞–ª–∫–∞–º"
filename = os.path.join(output_path, "telegram_results.xlsx")
os.makedirs(profile_path, exist_ok=True)

# üîç –ó–∞–ø—Ä–æ—Å—ã
queries = [
    "–†–∞–∑–¥–µ—Ç—å –¥–µ–≤—É—à–∫—É",
    "–†–∞–∑–¥–µ–≤–∞—Ç–æ—Ä",
    "–†–∞–∑–¥–µ—Ç—å –¥–µ–≤—É—à–∫—É –ø–æ —Ñ–æ—Ç–æ",
    "–†–∞–∑–¥–µ—Ç—å —Ñ–æ—Ç–æ",
    "–†–∞–∑–¥–µ—Ç—å –ø–æ —Ñ–æ—Ç–æ",
    "–°–Ω—è—Ç—å –æ–¥–µ–∂–¥—É",
    "–ë–æ—Ç –¥–ª—è —Ä–∞–∑–¥–µ–≤–∞–Ω–∏—è",
    "–†–∞–∑–¥–µ—Ç—å"
]

# ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞
options = Options()
options.add_argument(f"--user-data-dir={profile_path}")
options.add_argument("--start-maximized")
options.add_argument("--profile-directory=Default")

driver = webdriver.Chrome(options=options)
wait = WebDriverWait(driver, 15)

# üî± –ö–ª–∏–∫ –ø–æ "show more"
def click_show_more(image_path="show_more.png", timeout=5):
    print("üîç –ò—â–µ–º –∫–Ω–æ–ø–∫—É 'show more' –Ω–∞ —ç–∫—Ä–∞–Ω–µ...")
    start = time.time()
    while time.time() - start < timeout:
        try:
            location = pyautogui.locateCenterOnScreen(image_path, confidence=0.8)
            if location:
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º: {location}")
                pyautogui.moveTo(location)
                pyautogui.click()
                time.sleep(1)
                return True
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ show more: {e}")
        time.sleep(0.5)
    print("‚ùå –ö–Ω–æ–ø–∫–∞ 'show more' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ –Ω–∞–∂–∞–ª–∞—Å—å.")
    return False

# üî∏ Telegram Web (–ø—Ä–æ—Ñ–∏–ª—å k)
driver.get("https://web.telegram.org/k/")
time.sleep(8)

# üìÖ –î–∞—Ç–∞
today = datetime.now().strftime("%d.%m.%Y")

# üìÅ –°—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
if os.path.exists(filename):
    df_existing = pd.read_excel(filename)
else:
    df_existing = pd.DataFrame(columns=["–î–∞—Ç–∞", "–ó–∞–ø—Ä–æ—Å", "#", "–ù–∞–∑–≤–∞–Ω–∏–µ", "–°—Å—ã–ª–∫–∞", "–ü–æ–¥–ø–∏—Å—á–∏–∫–∏", "–¢–∏–ø"])

# üìÖÔ∏è –°–±–æ—Ä
new_rows = []

for query in queries:
    print(f"\nüîé –ü–æ–∏—Å–∫: {query}")
    try:
        search_box = wait.until(EC.presence_of_element_located(
            (By.XPATH, '//input[contains(@class, "input-search-input")]')
        ))
        search_box.clear()
        search_box.send_keys(query)
        time.sleep(4)

        clicks = 0
        while click_show_more():
            clicks += 1
            driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")
            time.sleep(2)

        print(f"üîÅ –ö–Ω–æ–ø–∫–∞ 'show more' –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ {clicks} —Ä–∞–∑(–∞)")

        driver.execute_script("window.scrollTo(0, 0);")
        time.sleep(1)
        driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")
        time.sleep(2)

        wait.until(EC.presence_of_all_elements_located((By.XPATH, '//a[contains(@class, "chatlist-chat")]')))
        results = driver.find_elements(By.XPATH, '//a[contains(@class, "chatlist-chat")]')
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ: {len(results)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤—ã–¥–∞—á–∏")

        position = 1
        for result in results:
            try:
                title = result.find_element(By.CLASS_NAME, "peer-title").text.strip()
                subtitle = result.find_element(By.CLASS_NAME, "row-subtitle").text.strip()

                if not title:
                    continue

                username_match = re.search(r"@[\w\d_]+", subtitle)
                link = f"https://t.me/{username_match.group(0)[1:]}" if username_match else ""

                subs_match = re.search(r"(\d[\d\s]*)\s+(subscribers|members)", subtitle, re.IGNORECASE)
                subscribers = int(subs_match.group(1).replace(" ", "")) if subs_match else ""

                if "bot" in subtitle.lower():
                    obj_type = "–ë–æ—Ç"
                elif "subscribers" in subtitle.lower():
                    obj_type = "–ö–∞–Ω–∞–ª"
                elif "members" in subtitle.lower():
                    obj_type = "–ß–∞—Ç"
                else:
                    obj_type = "?"

                new_rows.append([today, query, position, title, link, subscribers, obj_type])
                position += 1

            except Exception as e:
                print("‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω –æ–¥–∏–Ω –±–ª–æ–∫:", e)

    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞:", e)

# üìÜ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
df_new = pd.DataFrame(new_rows, columns=["–î–∞—Ç–∞", "–ó–∞–ø—Ä–æ—Å", "#", "–ù–∞–∑–≤–∞–Ω–∏–µ", "–°—Å—ã–ª–∫–∞", "–ü–æ–¥–ø–∏—Å—á–∏–∫–∏", "–¢–∏–ø"])
df_filtered = df_existing[df_existing["–î–∞—Ç–∞"] != today]
df_final = pd.concat([df_filtered, df_new], ignore_index=True)
df_final.to_excel(filename, index=False, sheet_name="Telegram")

print(f"\n‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ {filename}")
input("‚èπ –ù–∞–∂–º–∏ Enter, —á—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä...")
driver.quit()

# === üìò –°–ø—Ä–∞–≤–∫–∞ –ø–æ –≤–µ—Ä—Å–∏–∏ v1.12 ===
# –ö–ª–∏–∫–∞–µ—Ç show more —Å –ø–æ–º–æ—â—å—é pyautogui –ø–æ —Ñ–æ—Ç–æ
# –ü–æ—Å–ª–µ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è –ø—Ä–æ–¥–µ–ª—ã–≤–∞–µ—Ç scroll –≤–≤–µ—Ä—Ö/–≤–Ω–∏–∑
# –î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–æ–ª–±–µ—Ü "#" ‚Äî –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞ –≤—ã–¥–∞—á–∏
# –ü—É—Å—Ç—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è
# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Excel: –¥–∞—Ç–∞, –∑–∞–ø—Ä–æ—Å, #, –Ω–∞–∑–≤–∞–Ω–∏–µ, —Å—Å—ã–ª–∫–∞, –ø–æ–¥–ø–∏—Å—á–∏–∫–∏, —Ç–∏–ø
# ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫: python telegram_search_save_results.py
